#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

// US JISのキー名の調整
#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角
// 特殊な入力法

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <225>;
    quick-tap-ms = <200>;
    require-prior-idle-ms = <150>;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <175>;
    quick-tap-ms = <200>;
};

&sk {
};

&sl {
};

&caps_word {
};

&key_repeat {
};

/ {
    combos {
        compatible = "zmk,combos";
        timeout-ms = <100>;
        require-prior-idle-ms = <150>;

        combo_lang2 {
            key-positions = <7 8 9>;
            bindings = <&kp LANG2>;
            layers = <0>;
        };

        combo_lang1 {
            key-positions = <10 11 12>;
            bindings = <&kp LANG1>;
            layers = <0>;
        };
        
        combo_comma {
            key-positions = <10 16>;
            bindings = <&kp COMMA>;
        };

        combo_period {
            key-positions = <11 16>;
            bindings = <&kp PERIOD>;
        };

        combo_esc {
            key-positions = <0 6>;
            bindings = <&kp ESC>;
        };

        combo_q {
            bindings = <&kp Q>;
            key-positions = <0 2>;
            layers = <0>;
        };

        combo_x {
            bindings = <&kp X>;
            key-positions = <1 2>;
            layers = <0>;
        };

        combo_l {
            bindings = <&kp L>;
            key-positions = <3 5>;
            layers = <0>;
        };

        combo_p {
            bindings = <&kp P>;
            key-positions = <3 4>;
            layers = <0>;
        };

        combo_m {
            bindings = <&kp M>;
            key-positions = <4 5>;
            layers = <0>;
        };

        combo_j {
            bindings = <&kp J>;
            key-positions = <5 13>;
            layers = <0>;
        };

        combo_c {
            bindings = <&kp C>;
            key-positions = <7 8>;
            layers = <0>;
        };

        combo_v {
            bindings = <&kp V>;
            key-positions = <8 9>;
            layers = <0>;
        };

        combo_w {
            bindings = <&kp W>;
            key-positions = <10 12>;
            layers = <0>;
        };

        combo_z {
            bindings = <&kp Z>;
            key-positions = <10 11>;
            layers = <0>;
        };

        combo_g {
            bindings = <&kp G>;
            key-positions = <11 12>;
            layers = <0>;
        };

        combo_d {
            bindings = <&kp D>;
            key-positions = <12 13>;
            layers = <0>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <12  16>;
            layers = <0>;
        };

        combo_lbkt {
            bindings = <&kp LBKT>;
            key-positions = <2 15>;
            layers = <0>;
        };

        combo_rbkt {
            bindings = <&kp RBKT>;
            key-positions = <3 16>;
            layers = <0>;
        };

    
        combo_n3 {
            bindings = <&kp N3>;
            key-positions = <10 11>;
            layers = <1>;
        };

        combo_n5 {
            bindings = <&kp N5>;
            key-positions = <10 12>;
            layers = <1>;
        };

        combo_n6 {
            bindings = <&kp N6>;
            key-positions = <11 12>;
            layers = <1>;
        };

        combo_n7 {
            bindings = <&kp N7>;
            key-positions = <10 11 12>;
            layers = <1>;
        };

        combo_n9 {
            bindings = <&kp N9>;
            key-positions = <10 13>;
            layers = <1>;
        };

        combo_n0 {
            bindings = <&kp N0>;
            key-positions = <11 13>;
            layers = <1>;
        };

        combo_f3 {
            bindings = <&kp F3>;
            key-positions = <10 11>;
            layers = <2>;
        };

        combo_f5 {
            bindings = <&kp F5>;
            key-positions = <10 12>;
            layers = <2>;
        };

        combo_f6 {
            bindings = <&kp F6>;
            key-positions = <11 12>;
            layers = <2>;
        };

        combo_f7 {
            bindings = <&kp F7>;
            key-positions = <10 11 12>;
            layers = <2>;
        };

        combo_f9 {
            bindings = <&kp F9>;
            key-positions = <10 13>;
            layers = <2>;
        };

        combo_f10 {
            bindings = <&kp F10>;
            key-positions = <11 13>;
            layers = <2>;
        };

        combo_f11 {
            bindings = <&kp F11>;
            key-positions = <10 11 13>;
            layers = <2>;
        };

        combo_f12 {
            bindings = <&kp F12>;
            key-positions = <12 13>;
            layers = <2>;
        };


    };

    keymap {
        compatible = "zmk,keymap";

        layer_base{
            bindings = <
                   &kp Q       &mt LGUI U       &kp Y            &kp B            &mt RGUI N          &kp R
&mt LSHIFT O       &kp I       &kp A            &kp E            &kp S            &kp K               &mt RALT H       &mt RSHIFT T
                               &kp BSPC         &lt 2 SPACE      &lt 1 RET        &mt RCTRL TAB
            >;
        };
        layer_1{
            bindings = <
            &kp LGUI    &kp FSLH    &kp BSLH        &kp PLUS        &kp STAR       &kp MINUS
&kp LSHIFT  &kp LALT    &kp LCTRL   &none           &kp N1          &kp N2         &kp N4      &kp N8
                        &kp DEL     &trans          &trans          &trans
            >;
        };
        layer_2 {
            bindings = <
        &trans    &kp UP    &none       &none   &none   &none
&trans  &kp LEFT  &kp DOWN  &kp RIGHT   &kp F1  &kp F2  &kp F4  &kp F8
                  &trans    &trans      &trans  &trans
            >;
        };
    };
};
